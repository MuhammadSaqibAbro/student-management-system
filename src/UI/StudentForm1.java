  /*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;
import DAO.CourseDAO;
import DAO.DepartmentDAO;
import DAO.StudentDAO;
import dbConnection.DBConnection;
import DAOImp.StudentDAOImp;
import DAOImp.DepartmentDAOImp;
import DAOImp.CourseDAOImp;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.text.ParseException;
import java.util.List;
import java.util.Objects;





import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Department;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import model.Student;
import model.Department;
import java.util.List;
import model.Department;
import DAO.DepartmentDAO;
import DAOImp.CourseDAOImp;
import model.Course;

/**
 *
 * @author SAQIB
 */
public class StudentForm1 extends javax.swing.JFrame {
    Object columns[]={"ID","Name","Roll No","City","Email","Age","Department","Course"};
    DefaultTableModel defaultTableModel;
    StudentDAO stDAO=new StudentDAOImp();
   DepartmentDAO dpDAO=new DepartmentDAOImp();
    Connection con = null;
    PreparedStatement ps = null;
    ResultSet rs = null;
    Integer studentId=0;
       StudentDAO studentDAO = new StudentDAOImp();
    DepartmentDAO departmentDAO = new DepartmentDAOImp();
    CourseDAO courseDAO = new CourseDAOImp();
    /**
     * Creates new form StudentForm1
     */
  

    public StudentForm1() {
        initComponents();
        defaultTableModel=(DefaultTableModel) bTable.getModel();
        fillTable();
        fillDepartmentCombo();
        fillCourseCombo();

    }
    private void fillTable(){
                defaultTableModel = new DefaultTableModel(columns, 0);
                        List<Student> prod = stDAO.getAllStudent();
               for(Student s: prod){
                Object[] row={s.getId(),s.getSname(),s.getRollno(),s.getCity(),s.getEmail(),s.getAge(),s.getDepartment().getDep_name(),s.getCourse().getCrs_name()};
                defaultTableModel.addRow(row);
                bTable.setModel(defaultTableModel);
                        }
    }
    
  
private void resetFields() {
       bName.setText("");
       BRoll.setText("");
       bCity.setSelectedItem(null);
       bEmail.setText("");
      bAge.setValue(0);
    bDepartment.setSelectedItem(null);
    bCourse.setSelectedItem(null);
   }
private void  fillDepartmentCombo(){
    List<Department> dplist=dpDAO.getAllDepartment();
    for(Department d: dplist){
   bDepartment.addItem(d.getDep_name());
    }
}

    private void fillCourseCombo(){
    List<Course> Crslist=courseDAO.getAllCourse();
    for(Course c: Crslist){
   bCourse.addItem(c.getCrs_name());
    }
   }
    
private Student getStudent(){
     DepartmentDAO departmentDao=new DepartmentDAOImp();
     CourseDAO courseDao=new CourseDAOImp();
     String name=bName.getText();
        String rollno=BRoll.getText();
        String city=(String) bCity.getSelectedItem();
        String email=bEmail.getText();
       int age = (int) bAge.getValue();
       String departmentName=(String) bDepartment.getSelectedItem();
       Department department=departmentDao.getDepartmentByName(departmentName);
       
        String courseName=(String) bCourse.getSelectedItem();
       Course course=courseDao.getCourseIDByName(courseName);
        
       Student student=new Student();
       student.setSname(name);
       student.setRollno(rollno);
       student.setCity(city);
       student.setEmail(email);
       student.setAge(age);
       student.setDepartment(department);
       student.setCourse(course);
       return student;
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        bName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        BRoll = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        bCity = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        bEmail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        bAge = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        bInsert = new javax.swing.JButton();
        bUpdate = new javax.swing.JButton();
        bDelete = new javax.swing.JButton();
        bClear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        bTable = new javax.swing.JTable();
        bDepartment = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        bCourse = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Name");

        bName.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNameActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Roll No");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("City");

        jPanel1.setBackground(new java.awt.Color(0, 51, 153));

        jLabel4.setBackground(new java.awt.Color(0, 102, 51));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setText("Student managment System");

        jLabel9.setIcon(new javax.swing.ImageIcon("C:\\Users\\SAQIB\\Downloads\\arrow.png")); // NOI18N
        jLabel9.setText("jLabel9");
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(jLabel4)
                .addContainerGap(172, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel9))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        bCity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Karachi", "Hyderabad", "Larkana", "Sukkur", "UmerKot", "Tando Adam", "KahirPur" }));
        bCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCityActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Email");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Age");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Department");

        bInsert.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bInsert.setText("Insert");
        bInsert.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(0, 0, 153)));
        bInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bInsertActionPerformed(evt);
            }
        });

        bUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bUpdate.setText("update");
        bUpdate.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(0, 0, 153)));
        bUpdate.setMaximumSize(new java.awt.Dimension(41, 24));
        bUpdate.setMinimumSize(new java.awt.Dimension(41, 24));
        bUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUpdateActionPerformed(evt);
            }
        });

        bDelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bDelete.setText("Delete");
        bDelete.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(0, 51, 153)));
        bDelete.setMaximumSize(new java.awt.Dimension(41, 24));
        bDelete.setMinimumSize(new java.awt.Dimension(41, 24));
        bDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteActionPerformed(evt);
            }
        });

        bClear.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bClear.setText("Clear");
        bClear.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(0, 0, 153)));
        bClear.setMaximumSize(new java.awt.Dimension(41, 24));
        bClear.setMinimumSize(new java.awt.Dimension(41, 24));
        bClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bClearActionPerformed(evt);
            }
        });

        bTable.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 0, 153)));
        bTable.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Roll No", "City", "Email", "Age", "Departement"
            }
        ));
        bTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(bTable);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Course");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(12, 12, 12)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(bName)
                                        .addComponent(bCity, 0, 139, Short.MAX_VALUE)
                                        .addComponent(bAge))
                                    .addGap(76, 76, 76)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(57, 57, 57))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGap(32, 32, 32)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(BRoll, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                                        .addComponent(bEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                                        .addComponent(bDepartment, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(bCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(180, 180, 180)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addComponent(bUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62)
                                .addComponent(bClear, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9)))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(BRoll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(bCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(bAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(bDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bClear, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bNameActionPerformed

    private void bInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bInsertActionPerformed
          
        
        Connection con = DBConnection.getConnection();// TODO add your handling code here:
        StudentDAO stdao = new StudentDAOImp();


        boolean success = stdao.addStudent(getStudent());
        if(success){
            JOptionPane.showMessageDialog(this,"added successfully");
             fillTable();
            
        }
    }//GEN-LAST:event_bInsertActionPerformed

    private void bClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bClearActionPerformed
         
    resetFields();
                // TODO add your handling code here:
    }//GEN-LAST:event_bClearActionPerformed

    private void bDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeleteActionPerformed
        // TODO add your handling code here:
        
        
 Student student = this.getStudent();
        student.setId(studentId);
        boolean success = studentDAO.deleteStudent(student);
        if (success) {
            JOptionPane.showMessageDialog(this, "Deleted Successfully");
            fillTable();
            resetFields();
        }
          
        
    }//GEN-LAST:event_bDeleteActionPerformed

    private void bTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bTableMouseClicked
        // TODO add your handling code here:      
        int index= bTable.getSelectedRow();
        TableModel model=bTable.getModel();
        
//        String name=model.getValueAt(index, 1).toString();
//        String roll=model.getValueAt(index, 2).toString();
//        String city=model.getValueAt(index, 3).toString();
//        String email=model.getValueAt(index, 4).toString();
//        int age=(int) model.getValueAt(index, 5);
//        String department=model.getValueAt(index, 6).toString();
//        
//        bName.setText(name);
//        BRoll.setText(roll);
//        bCity.setSelectedItem(city);
//        bEmail.setText(email);
//        bAge.setValue(age);
//        bDepartment.setSelectedItem(department);

        studentId = Integer.parseInt(bTable.getValueAt(bTable.getSelectedRow(), 0).toString());
        
        Student student = studentDAO.getStudentById(studentId);
        bName.setText(student.getSname());
        BRoll.setText(student.getRollno());
        bCity.setSelectedItem(student.getCity());
        bEmail.setText(student.getEmail());
        bAge.setValue(student.getAge());
       
        Department department = departmentDAO.getDepartmentById(student.getDepartment().getDep_ID());
        bDepartment.setSelectedItem(department.getDep_name());
       
        Course course = courseDAO.getCourseById(student.getCourse().getCrs_ID());
        bCourse.setSelectedItem(course.getCrs_name());
        
        
    }//GEN-LAST:event_bTableMouseClicked

    private void bCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bCityActionPerformed

    private void bUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUpdateActionPerformed
        // TODO add your handling code here:
        Student student = this.getStudent();
        student.setId(studentId);
        boolean success = studentDAO.updateStudent(student);

        if (success) {
            JOptionPane.showMessageDialog(this, "Updated Successfully");
            fillTable();
            resetFields();;
        }
    }//GEN-LAST:event_bUpdateActionPerformed

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        Selection selection =new Selection();
        StudentForm1.this.setVisible(false);
        selection.setVisible(true);
        StudentForm1.this.dispose();
        
          
    }//GEN-LAST:event_jLabel9MouseClicked



/**
 * @param args the command line arguments
 */
public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

}
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentForm1.class  

.getName()).log(java.util.logging.Level.SEVERE, null, ex);

} catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentForm1.class  

.getName()).log(java.util.logging.Level.SEVERE, null, ex);

} catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentForm1.class  

.getName()).log(java.util.logging.Level.SEVERE, null, ex);

} catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentForm1.class  

.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentForm1().setVisible(true);
            }
        });
    }

    private boolean validateFields() {
        if (bName.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(StudentForm1.this, "Enter any Name");
            bName.grabFocus();
            return false;
        }
        if (BRoll.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(StudentForm1.this, "Enter any RollNo");
            BRoll.grabFocus();
            return false;
        }
        if (bCity.getSelectedItem().toString().trim().isEmpty()) {
            JOptionPane.showMessageDialog(StudentForm1.this, "Enter any City");
            bCity.grabFocus();
            return false;
        }
        if (bEmail.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(StudentForm1.this, "Enter any Email");
            bEmail.grabFocus();
            return false;
        }
        if (bAge.getValue().toString().trim().isEmpty()) {
            JOptionPane.showMessageDialog(StudentForm1.this, "Enter any Age");
            bAge.grabFocus();
            return false;
        }
        if (bDepartment.getSelectedItem().toString().trim().isEmpty()) {
            JOptionPane.showMessageDialog(StudentForm1.this, "Enter any Departement");
            bDepartment.grabFocus();
            return false;
        }
        if (bCourse.getSelectedItem().toString().trim().isEmpty()) {
            JOptionPane.showMessageDialog(StudentForm1.this, "Enter any Course");
            bCourse.grabFocus();
            return false;
        }

        return true;
    }
    
//    
//    private void BTableMouseClicked(java.awt.event.MouseEvent evt) {                                          
//        // TODO add your handling code here:
//             int index= bTable.getSelectedRow();
//        TableModel model=bTable.getModel();
//        
//        String name=model.getValueAt(index, 1).toString();
//        String roll=model.getValueAt(index, 2).toString();
//        String city=model.getValueAt(index, 3).toString();
//        String email=model.getValueAt(index, 4).toString();
//        int age=(int) model.getValueAt(index, 5);
//        String dept = model.getValueAt(index, 6).toString();
//        bName.setText(name);
//        BRoll.setText(roll);
//        bCity.setSelectedItem(city);
//        BRoll.setText(email);
//       bAge.setValue(age);
//       bDepartment.setSelectedItem(dept);
//        
//    }                                         



   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BRoll;
    private javax.swing.JSpinner bAge;
    private javax.swing.JComboBox<String> bCity;
    private javax.swing.JButton bClear;
    private javax.swing.JComboBox<String> bCourse;
    private javax.swing.JButton bDelete;
    private javax.swing.JComboBox<String> bDepartment;
    private javax.swing.JTextField bEmail;
    private javax.swing.JButton bInsert;
    private javax.swing.JTextField bName;
    private javax.swing.JTable bTable;
    private javax.swing.JButton bUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    void setvisbile(boolean b) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    
    void setVisible() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

  

    

    
}


